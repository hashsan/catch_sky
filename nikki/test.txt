＃テスト
これはテスト
最初のテスト
これでよい。
あとは、どこにアップロードをするのか決める。
簡単なインターフェイスがあれば良い。
https://i.pinimg.com/564x/9e/ad/aa/9eadaa927efc6ce070dfc7be0b8d6d1e.jpg
問題は、バックグラウンド。
なぜかフィルターが使えない。
いや、フィルターというが、この技術は、バックグラウンドを２つ重ねてやるんだが。
一番上を、半分透明な感じにして、二枚目に画像を貼る。すると、どんな画像でも文字識別できるような背景になる。
「なんとなく問題わかった！」
あと、フォワーディングスクロールな。
末尾にはどうやるんだろ。
追記：修正してきた。
でもだめだった。
「問題わかってなかった！」
えーと。問題の切り分けは、
まずは、ペンが悪さしている事が多い。いや、この場合は良いことだけど。
んで、開発画面だけで、なぜ有効になって、おそらくはプレフィックスだと思ったが、プレフィックスじゃなかった。。
プレフィックスならグーグル反応するし。
ということで、なんだろ。
正しく動くソースを取ってきてやるしかない。
悪さしているのは、
---
:root{
/*ルートのバリュー*/
}
---
だと思われる。
「違った！」
問題は、ボディのサイズでした。
https://i.pinimg.com/564x/97/d6/f9/97d6f90949bcdb09f585805db0e57834.jpg
「（なに、この美人、高飛車）」
ボディに何も表示していない。
実際には、要素をフィックスなどにすると、ボディの高さが０のままになってしまう。
すると、バックグラウンドが作用しない。
ので、この場合は対処する必要がある。
グラディアント関係ない。
何もボディ上にサイズを反映していない場合は、
---
body{
  margin:auto;
  min-height:100vh;
}
---
を指定してあげると上手く動く。
マージンはなぜかデフォルトであるから、気をつけろ。
というよりは、
リニアグラディアントのサイズを指定すれば解決する気がしてきたわ。


＃はい、解決した。
バグっぽい。
fujiyama.cssのバグでした。
---
body{
  background-size:100vw 100vh,auto auto;
}
---
バックグラウンドの、最初のリニアグラディアントの最初のサイズを指定しろよ。っていう。
画像はオートでいけるな、さすがだ。
追記：横幅を１００％にしたほうがいい。
ソッチのほうが化ける。
ということで
---
 background-size:100vw 100vh,100% auto;
---
に微調整しました。
こうすると７６８ピクセルぐらいで、中々の出来栄えとなる。
https://i.pinimg.com/564x/6e/de/e2/6edee2c677a8731dfa4c36f89bcaeb11.jpg


＃また別のバグ発見。
改行反映されてない。
もう一度言おう。
「改行反映されてなくね？」
フジヤマさんのバグですね。このバグっていうのはいわゆる。日本語においては、読みやすさのために改行めっちゃ大事なので、ホワイトスペースを無視するのはやめて、しっかり改行入れませんか。
という配慮でした。
---
<p><!--kaigyo--></p>
---
一見入りそうな予感。
「しかし、入ってない不思議！」
元ソースを見てみよう。
「実はフジヤマさんは二人目なの！」
https://i.pinimg.com/564x/32/80/81/3280818afcb8956417c1b6d0f8bf01ad.jpg
「えっ？（物語始まるの？いやバグ修正するけど）」
さて。
元のソースでは、パラグラフの改行をどうしているのかと云うと。これは、ブラウザは空のパラグラフのサイズを無視するからですが。
---
//元な
    if(iskaigyo(d)){      
      return `<p><!---${d}---><br></p>`      
    }
---
---
//二人目のフジヤマさん
    if(iskaigyo(d)){      
      return `<p><!---${d}---></p>`      
    }
---
「あっ、抜けてる！」
おま。つビーアール。
いれるか。もう一個見つけだけどな。
イメージ要素のクラス指定、抜けてる。
---
<img class="para" src="...">
---
---
<img src="..."><!--nai dato xtu-->
---
もともと、これ、イメージ要素のパディングを指定したほうがいいんじゃないかって、やつなんだよな。でも、強調文字と一緒に使うから、いらないんじゃね？　ってことになったやつ。
よし、修正しよう。


＃した。した。修正した。
あとは、いろいろとバグった。
ローカルストレージで保存してるから、二つ同じのがあると、競合する。
しかも、使ってない方は、古いし。
くっ。慎重に。
で。改行はできた。
あとは、消えた文字列を保管すると。
「下の方はパディングが必要！」
やったよ。
画像も消えた。
あるある。ピンタレスト補完。
https://i.pinimg.com/564x/16/cf/66/16cf66ec5c45a85c2ce96a5f3abb0960.jpg
「凛々しい！」
あとは、アイデアのやつ。
保存する時に、決める？的なのと。
なんとか、画像って、どうにかできないかな。みたいな議論な。
画像っていうのは、背景にリアルタイムに反映できるとよいと思われる。
しかもジャバスクリプト使っていいなら、画像重ねられる。
あとはCTRL+Sで保存。
ライブで実行は、文字打ちじゃなくて、改行でいいんじゃないの？
デバウンス必要なの？みたいなやつ。
ま、必要か。いちいち改行するのもな。
あとは、CTRL+Sでサーバ保存か。
早くローカルストレージからおさらばしたい。
インタプリタ使って対話型でデータ作り出そうね。アクセストークンの保存とか、リポジトリ先とか、ファイル名の変更とか、クリックリンクでいけるよ。
＠保存（#)
みたいな。

＃テキストでトップページを作れるのでは。
あとはオーアウスな。
というのが必要で、おお、意外とすんなりいっている件。
クラス化が強いな。
地味に、消えるのが気になる。
左下のインデックス。これはフラグメントにしてから投入したほうがいいのか。
あとは、レンダーのタイミングが早すぎると思われる。２００ミリセックじゃ、キータイピングが追いつかないのか。
「要模索、キータイピングの速度！」
というか、これ検証してもいい件。
しかし、検証といっての何を打てばいいのか。考えながら打つので、結局の所、少し時間がかかるのだろう。
あとは、プリンターも加えるか。
https://i.pinimg.com/564x/4e/e6/bb/4ee6bb032271928e34211d3e7583b348.jpg
「（この表情イノセンス）」
ランチドするかな。

＃ランチドしてもいい。
ここから始めよう。ジットハブにアップロードして、動かして課題をあげる。
まずは、エディタの幅が小さいので４００から４８０に変更。ピーエックス。
そうして、高さの件も、５０ｖｈになっているが、６０ｖｈに変更。７０は違和感ある。



