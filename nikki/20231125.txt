＃開発について。
　フジヤマのバグなど、発見。
　というよりは、フジヤマを書き換えて、五割ほど高速化した。
　高速化の方針はリプレイスを一回に抑えたこと。
　従来のフジヤマは、リプレイスを何度もしていた。またスプリットを使って改行ごとの処理だったので、複数行に弱いという欠点があった。
　その点を全て正規表現に置き換えることで対応。
　また、スクリプトも使える。
　スクリプトは、そのままレンダーしただけだと、文字列のスクリプトは反応しないので、一度、スクリプトの文字列を取得して、イーバル。
　正直、この方法しかない。

＃フジヤマのバグは画像。
　文末の画像が反応しない。
　これは「URL改行」で正規表現を取得しているからである。それはわかるのだが、＄で文末を取れる時と取れない時がある。この点は、いまいちわからないので、何かしらがあると思われる。
　よく使う正規表現のレジェクサーでは、反応しているので、さて、なんだろう。

＃オクトのバグっぽいの。
　データをジットハブに保存するOCTOはよく動いている。安定しているといっても過言ではない。
　しかし、エンコードのほうにバグがある。
　エンコードは、アウェイトしないエンコードの関数にしているが、それは、文字列限定のエンコードである。
「ファイルのようなブロッブには対応していない！」
　ので、いまのオクトは、その点を修正しなければ、画像をアップロードできない、という欠点を持つ。
　まあ、書き直そうか、と思うところはある。
　まず、SHAを取ってくる場合に、コンテンツのデータをすべて取ってくるのは、効率が悪い。これは修正できる。
　SHAを取ってくるときには、最新のコミットで十分なはずである。
　またデータが文字列なのか、ファイルなのかの判定を加えれば、容易に画像のアップロード対応可能である。
　問題点といえば、コミットメッセージだろう。
　しかし、コミットメッセージは、ファイルなのかを判定できれば、回避可能である。
　画像の場合は、特にメッセージを加える必要はないだろう。せいぜい日付ぐらいである。

