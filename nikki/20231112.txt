＃認証したらイケる問題。
ランチドしたが、最初で問題。
認証したらリロードしないと、エディタが起動しない。
理由はいまいちだが、isauthがfalseになっているような、なっていないような。
モジュール内過ぎて、デバッグが難しい件もどうにかしたい。
セーブした。
これで新しいファイルができればOK。というができるだろう。

＃以後開発関連に関して
は。「dev1.txt」から始める。

＃インポートを極める。
モジュールの分割が検討課題にあがったので、インポートを極めなければならないな。
インポートというのは、これのこと。
---
//p1
import "korega_import.js"
---
とか
---
//p2
import korega_import from "korega_import.js"
---
とか
---
//p3
import {korega_import} from "korega_import.js"
---
とか
---
//p4
import('korega_import.js').then(mod=>{
 const {korega_import} = mod
})
---
これくらいだな。
それぞれ解説。というか、自分の知ってる範囲内で。

＃とりあえずみんなデフォルトでエクスポートしているだろうっ！
というのに、対応するのは「p2」
「p2」は。
---
import korega_import from "korega_import.js"
---
対応するエクスポートは。
---
export default korega_import
---
とりあえず、名前は勝手につけてね、読み込んだら、これが表示されますから。っていうときは、ムスタングをつけないで、ベタベタインポートします。
「インポートはデフォルトを改名して使って下さい。インポートした場合のデフォルトは、これがインポートになります！」
関数でもオブジェクトでも変数でもよい。
https://i.pinimg.com/564x/21/b5/fd/21b5fd02e7a03fd508712899f0cb9cff.jpg
「ムスタングというのは{}だぞ」
「あと、お前の腰ベルト切れそうになってるじゃないか、ゴブリンか、コボルトか、修繕しておけ」
「（こいつ、ツンデレだけど、いい女）」

＃名前も固定しますよ。一字一句間違えないでインポートして下さいっ！
っていうときは「p3」
「p3」は。
---
import {korega_import} from "korega_import.js"
---
いわゆる、ムスタング付きで。
対応するエクスポートは。
---
function korega_import...
export {korega_import}
---
主に、共通する変数なんかを使う場合、これはシングルトン的なパターンとか、もう、みんなこれで決めろよとか、余計なことしたくない場合、作り手のほうがな。
どういう意味かと云うと、「クラスとか関数の先頭にエクスポートつければ完成！」するからだろう。
---
function korega_import(){
 return "tuku tte mita"
}
---
を外にモジュールとして公開する時には。
---
export function korega_import() {
...
}
---
と先頭にエクスポートをつければいい。
https://i.pinimg.com/564x/fc/61/00/fc6100d3ddedd037b1a212f0eeea9949.jpg
「怠惰だな。だが簡単でよろしい」




